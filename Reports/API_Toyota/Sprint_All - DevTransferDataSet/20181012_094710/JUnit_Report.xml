<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Sprint_All - DevTransferDataSet" time="440" tests="9" failures="4" errors="0">
   <testsuite name="Sprint_All - DevTransferDataSet" tests="9" failures="4" errors="0" time="440" timestamp="2018-10-12 09:47:11" hostname="vinh.le - TITAN-V-2001.titandms.local" id="Test Suites/API_Toyota/Sprint_All - DevTransferDataSet">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\vinh.le\\git\\TitanAPIKatalon\\Reports\\API_Toyota\\Sprint_All - DevTransferDataSet\\20181012_094710"/>
         <property name="logFiles" value="C:\\Users\\vinh.le\\git\\TitanAPIKatalon\\Reports\\API_Toyota\\Sprint_All - DevTransferDataSet\\20181012_094710\\execution0.log, C:\\Users\\vinh.le\\git\\TitanAPIKatalon\\Reports\\API_Toyota\\Sprint_All - DevTransferDataSet\\20181012_094710\\execution1.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="vinh.le - TITAN-V-2001.titandms.local"/>
         <property name="hostAddress" value="192.168.3.19"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="5.7.1.1"/>
      </properties>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:47:11 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:47:11 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:47:12 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:47:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:47:12 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:47:12 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:13 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:47:22 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:22 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:47:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:22 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:22 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:47:23 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:23 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:47:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:47:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:47:23 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:23 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:47:24 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:24 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:24 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:47:25 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:47:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:47:25 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:25 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:47:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:47:26 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:47:27 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:47:27 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:27 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:47:28 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:28 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:28 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:47:28 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:28 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:47:41 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:47:41 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:41 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:41 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:47:42 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:42 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:47:42 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:42 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:47:43 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:43 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:47:43 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:47:43 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:47:43 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:47:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:47:43 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:43 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:47:52 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:52 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:47:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:52 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:52 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:47:53 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:47:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:47:53 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:53 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:47:54 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:54 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:54 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:47:54 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:54 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:54 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:47:59 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:47:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:47:59 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:47:59 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:00 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:01 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:48:01 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:02 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:02 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:03 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:03 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:03 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:03 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:03 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:48:04 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:04 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:04 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:48:04 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:48:04 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:48:04 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:48:04 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:48:04 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:04 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:13 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:13 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:48:13 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:13 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:13 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:13 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:48:18 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:48:18 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:48:18 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:18 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:19 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:48:19 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:48:19 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:19 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:19 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:48:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:20 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:20 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:28 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:28 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:28 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:28 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:48:28 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:28 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:28 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:48:29 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:29 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:29 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:29 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:29 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:30 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:30 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:30 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:30 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:31 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:48:31 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:48:31 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:48:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:48:31 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:31 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:40 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:40 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:48:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:40 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:40 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:55 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:48:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:48:55 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:55 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:48:56 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:56 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:56 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:48:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:57 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:57 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:58 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:48:58 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:48:58 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:48:58 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:06 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:49:06 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:07 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:07 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:08 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:08 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:08 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:49:08 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="FAILED">
         <failure type="FAILED" message="(Stack trace: Assertion failed: 

assert timeslotJSON.size == count
       |            |    |  |
       |            3    |  2
       |                 false
       [15:00, 16:00, 17:00]

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537953621302.run(Script1537953621302.groovy:222)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:81)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)"/>
         <system-out><![CDATA[2018-10-12 09:49:08 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON.size == count
       |            |    |  |
       |            3    |  2
       |                 false
       [15:00, 16:00, 17:00]

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537953621302.run(Script1537953621302.groovy:222)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:81)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:49:08 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:49:09 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:49:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:49:09 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - Filepath = "Data Files/Toyota/OperationCode_ADDITIONAL.csv": null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:09 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:49:15 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:15 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:49:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:15 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:15 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:16 - [TEST_STEP][FAILED] - Statement - If (var_Status_PickupTime == "true"): Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' failed)

2018-10-12 09:49:16 - [TEST_STEP][FAILED] - callTestCase: Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' failed)

2018-10-12 09:49:16 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1 FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON.size == count
       |            |    |  |
       |            3    |  2
       |                 false
       [15:00, 16:00, 17:00]

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537953621302.run(Script1537953621302.groovy:222)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:81)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:49:16 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:49:16 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:34 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:34 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:49:34 - [MESSAGE][FAILED] - Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' failed)

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:49:34 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[2018-10-12 09:49:08 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON.size == count
       |            |    |  |
       |            3    |  2
       |                 false
       [15:00, 16:00, 17:00]

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537953621302.run(Script1537953621302.groovy:222)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:81)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:49:34 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:49:34 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:49:34 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:49:34 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - Filepath = "Data Files/Toyota/OperationCode_ADDITIONAL.csv": null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:34 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:49:40 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:40 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:40 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:44 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:49:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:49:44 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:44 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:49:45 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:45 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:45 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:49:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:49:46 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:46 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:49:47 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:47 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:49:47 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:49:47 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:52 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:49:52 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:49:52 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:53 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:49:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:53 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:53 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:49:54 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:49:54 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:54 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:54 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:55 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:55 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:55 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:55 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:55 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:56 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:49:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:49:56 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:50:09 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:50:09 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:50:09 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:50:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:50:09 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - Filepath = "Data Files/Toyota/OperationCode_ADDITIONAL.csv": null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:09 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:50:16 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:16 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:16 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:50:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:21 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:50:22 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:50:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:50:22 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:22 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:23 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:50:23 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:23 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:50:24 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:50:24 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:50:25 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:50:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:50:37 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:37 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:50:38 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:50:38 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:50:38 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:38 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:50:39 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:50:39 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:39 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:39 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:39 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:50:40 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:50:40 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:50:40 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:50:40 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:50:40 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:50:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:50:49 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - Filepath = "Data Files/Toyota/OperationCode_ADDITIONAL.csv": null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:49 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:50:55 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:55 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:50:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:50:55 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:50:55 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:50:56 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:50:56 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:50:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:50:56 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:51:05 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:05 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:05 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:51:05 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:51:05 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:05 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:51:06 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:06 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:06 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:06 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:51:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:07 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:07 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:51:08 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:08 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:08 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:08 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:09 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:09 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:09 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:09 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:51:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:09 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:51:09 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:09 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:51:19 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:20 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:20 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = "OSB_SERVICE_TYPE_ADDITIONAL": null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:51:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:51:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:51:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:51:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:51:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:51:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:51:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:51:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:21 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:51:27 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:27 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:27 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:30 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:30 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:30 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:51:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:31 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:51:31 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:31 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:51:50 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:51:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:51:50 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:50 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:51 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:51:51 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:51:51 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:51 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:51:52 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:52 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:52 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:53 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:51:53 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:51:53 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:51:53 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:52:00 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:00 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:00 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:01 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:01 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:52:01 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:01 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:01 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:02 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:02 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="PASSED">
         <system-out><![CDATA[2018-10-12 09:52:02 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:52:02 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:52:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:52:02 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:02 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:52:09 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:09 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:09 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:52:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:12 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:12 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:52:13 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:13 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:13 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:13 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:52:34 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:34 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:34 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:52:34 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:52:34 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:34 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:52:35 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:35 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:35 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:35 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:52:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:52:36 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:36 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:52:37 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:37 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:52:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:37 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:37 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:52:38 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:38 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:52:44 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:44 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:44 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:45 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:45 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:45 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:45 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (var_Status_CancelBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:46 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel" || Glb_Booking_ID == "wrong"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "cancel": null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "passed": null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Glb_StartDate = Glb_ServiceDate: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Glb_EndDate = Glb_ServiceDate: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:46 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:46 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - CancelBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/CancelBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/CancelBooking_JSON'

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - CancelBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:46 - [TEST_STEP][PASSED] - Statement - res_CancelBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(CancelBooking): Send request successfully

2018-10-12 09:52:47 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:47 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_CancelBooking_JSON - V1' successfully

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println("Test Case CancelBooking: PASSED"): null

2018-10-12 09:52:47 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="FAILED">
         <failure type="FAILED" message="(Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify response status code (Root cause: Expected status code is '400' but actual status code is '200')
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:36)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:212)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at Script1538994338630.VerifyResponse(Script1538994338630.groovy:43)
	at Script1538994338630$VerifyResponse.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at Script1538994338630.run(Script1538994338630.groovy:178)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:126)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)"/>
         <system-out><![CDATA[2018-10-12 09:52:47 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify response status code (Root cause: Expected status code is '400' but actual status code is '200')
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:36)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:212)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at Script1538994338630.VerifyResponse(Script1538994338630.groovy:43)
	at Script1538994338630$VerifyResponse.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at Script1538994338630.run(Script1538994338630.groovy:178)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:126)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:52:47 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:52:47 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:52:47 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:47 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:52:53 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:53 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:53 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:52:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetOffTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:52:56 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:52:56 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:52:56 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:52:56 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:52:56 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:53:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:19 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:53:19 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - If (var_Status_PickupTime == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:53:19 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - ConvertString_toDate = { java.lang.String Date_Str, java.lang.String format -> ... }: null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - GetPickupTime = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetPickUpTimes_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ServiceBay_Time:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetPickUpTimes_JSON'

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - GetPickupTime.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:19 - [TEST_STEP][PASSED] - Statement - res_GetPickupTime = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetPickupTime): Send request successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - TimeCanPickUp = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println("Time can pickup is: " + TimeCanPickUp): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start + Duration, "minute":0, "second":0]): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End, "minute":0, "second":0]): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = realtime_ws: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = time_close_ws: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Start_WS_Hr): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(current_hour) && Glb_ServiceDate == Glb_Current_Date): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration && !(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetPickupTime, 200, ""): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(realtime_ws.before(TimeCanPickUp))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetPickupTime.getResponseText()): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - timeslotJSON = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - assert size == count: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(count): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "passed": null

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetPickUpTimes_JSON - V1' successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (var_Status_ReservedTimeslot == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:53:20 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Duration_Time): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/ReserveTimeslots_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Duration:internal.GlobalVariable.Glb_Duration_Time, Drop_Off_Time:internal.GlobalVariable.Glb_DropOffTime, ... ]): Finding Test Object with id 'Object Repository/Toyota/ReserveTimeslots_JSON'

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - ReserveTimeslot.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - res_ReserveTimeslot = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ReserveTimeslot): Send request successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || DropOffTime.after(End_WS_Hr) || duration_hours < Duration): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ReserveTimeslot, 200, ""): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:20 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_ReserveTimeslot.getResponseText()): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = XReserveToken: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "passed": null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:53:20 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:20 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - times = times - Reserve_Timeslot: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - count = count - 1: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "passed": null

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ReserveTimeslots_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetTransport == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - GetTransportOption = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetTransportOptions_JSON, [Service_Date:internal.GlobalVariable.Glb_ServiceDate, Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code]): Finding Test Object with id 'Object Repository/Toyota/GetTransportOptions_JSON'

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - GetTransportOption.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_GetTransportOption = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetTransportOption): Send request successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetTransportOption, 200, ""): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "passed": null

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetTransportOption_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (var_Status_MakeBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Else If (!(Service_Date.format("E") == "Sat" || Service_Date.format("E") == "Sun")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 200, ""): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "current": null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_MakeServiceBooking.getResponseText()): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = BookingID: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "passed": null

2018-10-12 09:53:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:53:21 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceDate): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_DropOffTime): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_PickUpTime): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Reserve_Token): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalPrice): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_TotalDuration): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/MakeServiceBooking_JSON, [VIN:internal.GlobalVariable.Glb_VIN, REGNumber:internal.GlobalVariable.Glb_REGNumber, Service_Date:internal.GlobalVariable.Glb_ServiceDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/MakeServiceBooking_JSON'

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - MakeServiceBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:21 - [TEST_STEP][PASSED] - Statement - res_MakeServiceBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(MakeServiceBooking): Send request successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_BookingStatus): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Reserve_Token.toString().toLowerCase() == "no"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (Service_Date.before(current)): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr) || Glb_BookingStatus == "current"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println("Drop Off Time before WS Start Hour"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_MakeServiceBooking, 400, "drop off timeslot is taken"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_MakeServiceBooking_JSON - V1' successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (var_Status_SearchBooking == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:53:22 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_StartSearchDate): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_EndSearchDate): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_REGNumber): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - SearchForBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/SearchForBooking_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, StartSearchDate:internal.GlobalVariable.Glb_StartSearchDate, ... ]): Finding Test Object with id 'Object Repository/Toyota/SearchForBooking_JSON'

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - SearchForBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - res_SearchForBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(SearchForBooking): Send request successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - StartSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_StartSearchDate): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - EndSearchDate = java.util.Date.parse("yyyy-MM-dd", Glb_EndSearchDate): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (StartSearchDate.after(EndSearchDate)): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_SearchForBooking, 200, ""): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (EndSearchDate.before(Service_Date) || StartSearchDate.after(Service_Date) || !(Glb_REGNumber == "REG_TITAN_API") || Glb_BookingStatus == "cancel"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else: Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "passed": null

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_SearchForBooking_JSON - V1' successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (var_Status_GetBookingDetail == "true" && !(Glb_Reserve_Token == "no")): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:53:22 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:22 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:53:22 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1' successfully

2018-10-12 09:53:23 - [TEST_STEP][FAILED] - Statement - If (var_Status_ChangeBooking == "true" && !(Glb_Reserve_Token == "no")): Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' failed)

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:53:23 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON - AddOpCode'

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:53:23 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.after(PickUpTime)): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalDuration == "1")): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_TotalPrice == "110")): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Else If (duration_hours < TotalDuration): null

2018-10-12 09:53:23 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else If (!(var_DateChange == Glb_ServiceDate)): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else If (DropOffTime.before(Start_WS_Hr)): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else If (PickUpTime.after(End_WS_Hr)): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_ChangeBooking, 200, ""): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:53:31 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code: Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - GetBookingDetail = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetBookingDetails_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID]): Finding Test Object with id 'Object Repository/Toyota/GetBookingDetails_JSON'

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - GetBookingDetail.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - res_GetBookingDetail = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetBookingDetail): Send request successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Booking_ID == "1901" || Glb_BookingStatus == "cancel"): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println("All valid"): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetBookingDetail, 200, ""): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "passed": null

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetBookingDetail_JSON - V1 - Add_Code' successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "passed": null

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' successfully

2018-10-12 09:53:31 - [TEST_STEP][FAILED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' failed)

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Glb_AddJobLine = "false": null

2018-10-12 09:53:31 - [TEST_STEP][FAILED] - callTestCase: Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' failed)

2018-10-12 09:53:31 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev FAILED because (of) (Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify response status code (Root cause: Expected status code is '400' but actual status code is '200')
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:36)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:212)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at Script1538994338630.VerifyResponse(Script1538994338630.groovy:43)
	at Script1538994338630$VerifyResponse.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at Script1538994338630.run(Script1538994338630.groovy:178)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:126)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (var_DateChange == ""): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (var_DropOffChange == ""): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (var_PickUpChange == ""): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (var_PriceChange == ""): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (var_DurationChange == ""): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - DMSOperationCode = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - AddJobLineMethod = "Toyota/ChangeBooking_JSON": null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - If (Glb_AddJobLine.toString().toLowerCase() == "true"): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_Booking_ID): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceBay_Type): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_ContactId): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_FirstName): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_LastName): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(var_DateChange): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(var_DropOffChange): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - println(var_PickUpChange): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - ChangeBooking = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(AddJobLineMethod, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, BookingID:internal.GlobalVariable.Glb_Booking_ID, ... ]): Finding Test Object with id 'Object Repository/Toyota/ChangeBooking_JSON'

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - ChangeBooking.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - res_ChangeBooking = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(ChangeBooking): Send request successfully

2018-10-12 09:53:31 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - TotalDuration = Glb_TotalDuration: null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - DropOffTime = ConvertObjectToDate.call(Glb_DropOffTime): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - PickUpTime = ConvertObjectToDate.call(Glb_PickUpTime): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr_Obj = "0" + Glb_WorkshopStart + ":00": null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - Start_WS_Hr = ConvertObjectToDate.call(Start_WS_Hr_Obj): null

2018-10-12 09:53:31 - [TEST_STEP][PASSED] - Statement - End_WS_Hr_Obj = Glb_WorkshopEnd + ":00": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - End_WS_Hr = ConvertObjectToDate.call(End_WS_Hr_Obj): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - duration_hours = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:32 - [TEST_STEP][FAILED] - verifyResponseStatusCode: Unable to verify response status code (Root cause: Expected status code is '400' but actual status code is '200')

2018-10-12 09:53:32 - [MESSAGE][FAILED] - Expected status code is '400' but actual status code is '200'

2018-10-12 09:53:32 - [MESSAGE][FAILED] - Unable to verify response status code (Root cause: Expected status code is '400' but actual status code is '200')

2018-10-12 09:53:32 - [MESSAGE][FAILED] - Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_ChangeBooking_JSON - V1 - Dev' failed)

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case GetDropOffTime: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetPickupTime == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case GetPickupTime: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ReserveTimeslot == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case ReserveTimeslot: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetTransportOption == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case GetTransportOption: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_MakeServiceBooking == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case MakeServiceBooking: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_SearchBooking == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case SearchBooking: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetBookingDetail == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case GetBookingDetail: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_ChangeBooking == "passed"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println("Test Case ChangeBooking: PASSED"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_CancelBooking == "passed"): null

2018-10-12 09:53:32 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[2018-10-12 09:52:47 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify response status code (Root cause: Expected status code is '400' but actual status code is '200')
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:36)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.verifyResponseStatusCode(VerifyResponseStatusCodeKeyword.groovy:37)
	at com.kms.katalon.core.webservice.keyword.builtin.VerifyResponseStatusCodeKeyword.execute(VerifyResponseStatusCodeKeyword.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.verifyResponseStatusCode(WSBuiltInKeywords.groovy:212)
	at com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords$verifyResponseStatusCode$0.call(Unknown Source)
	at Script1538994338630.VerifyResponse(Script1538994338630.groovy:43)
	at Script1538994338630$VerifyResponse.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at Script1538994338630.run(Script1538994338630.groovy:178)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:126)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="FAILED">
         <failure type="FAILED" message="(Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)"/>
         <system-out><![CDATA[2018-10-12 09:53:32 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:53:32 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:53:32 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:53:32 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:32 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:53:38 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:38 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:38 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:53:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:53:42 - [TEST_STEP][FAILED] - Statement - If (var_Status_GetOffTime == "true"): Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' failed)

2018-10-12 09:53:42 - [TEST_STEP][FAILED] - callTestCase: Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' failed)

2018-10-12 09:53:42 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3 FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:42 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:53:43 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:43 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:53:43 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:53:43 - [MESSAGE][FAILED] - Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' failed)

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:53:43 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[2018-10-12 09:53:32 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-err>
      </testcase>
      <testcase name="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" classname="Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev" status="FAILED">
         <failure type="FAILED" message="(Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)"/>
         <system-out><![CDATA[2018-10-12 09:53:43 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetDropOffTime = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetPickupTime = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_ReserveTimeslot = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetTransportOption = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_MakeServiceBooking = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_SearchBooking = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetBookingDetail = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_ChangeBooking = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Status_CancelBooking = "failed": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Reserve_Token = "no": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_BookingStatus = "not yet": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Booking_ID = "wrong": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:53:43 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev: Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Interval == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopStart == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_WorkshopEnd == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Dealer_Code == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Location_Code == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_VIN == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_REGNumber == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_FirstName == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_LastName == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalPrice == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_TotalDuration == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_Duration == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartDropDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndDropDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_StartSearchDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_EndSearchDate == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_BookingId == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceType == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_DropOffTime == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_PickUpTime == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_ServiceBay_Type == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (!(Setup_AddJobLine == "")): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - SetDate = { java.util.Date current_time, int number_month, int number_day, int number_hour, java.lang.String format_date -> ... }: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - RandomNumber = { int number -> ... }: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - current_date = today.format("YYYY-MM-dd"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Current_Date = current_date: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_Current_Hour = SetDate.call(today, 0, 0, 4, "HH:mm"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Glb_StartDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Glb_EndDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Glb_StartSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Glb_EndSearchDate.toString().toLowerCase() == "cr"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Glb_ContactId = "1901" + RandomNumber.call(999999): null

2018-10-12 09:53:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Setup_Method_And_Variables - V1 - Dev' successfully

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true"): Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - callTestCase: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:53:43 - [TEST_CASE][PASSED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2: Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - RoundNumber = { java.lang.Float floatnumber -> ... }: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - ServiceType = Glb_ServiceType: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Filepath = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - If (Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK"): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - Filepath = "Data Files/Toyota/OperationCode_ADDITIONAL.csv": null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println(Glb_Dealer_Code): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println(Glb_Location_Code): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println(Glb_VIN): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - println(Glb_ServiceType): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:53:43 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:53:49 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceType == "OSB_SERVICE_TYPE_LOGBOOK" || Glb_ServiceType == "OSB_SERVICE_TYPE_ADDITIONAL")): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - Else If (Glb_VIN.toString().toLowerCase() == "vininvalid"): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (StatusCode == 0): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - Else: Verify response status code successfully

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:53:49 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - OpCodeJSON = 0: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - res_Text.each({ -> ... }): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - count_CSV = 0: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - CSVReader = new java.io.File(Filepath): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - csv_content = CSVReader.getText("utf-8"): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - CSVData = com.xlson.groovycsv.CsvParser.parseCsv([separator:,, readFirstLine:false], csv_content): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - For (def line : CSVData): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:53:49 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Name == Name: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert DMSOperationalCode == DMSOperationalCode: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _duration = Duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_duration.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(Duration) == _duration: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - _price = DealerPrice: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(_price.contains("."))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert RoundNumber.call(DealerPrice) == _price: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceType == ServiceType: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert ServiceCode == null: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert EMDuration == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert POAFlag == "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert Price == "0.0": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count_CSV += 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert OpCodeJSON == count_CSV: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Glb_Status_GetOperationCode = "passed": null

2018-10-12 09:54:31 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetServiceOperation_JSON - V2' successfully

2018-10-12 09:54:31 - [TEST_STEP][FAILED] - Statement - If (var_Status_GetOffTime == "true"): Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' failed)

2018-10-12 09:54:31 - [TEST_STEP][FAILED] - callTestCase: Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' failed)

2018-10-12 09:54:31 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3: Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3 FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - ConvertObjectToDate = { java.lang.Object global -> ... }: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - current_hour = ConvertObjectToDate.call(Glb_Current_Hour): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Service_Date = java.util.Date.parse("yyyy-MM-dd", Glb_ServiceDate): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - current = java.util.Date.parse("yyyy-MM-dd", Glb_Current_Date): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Start_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_StartDate): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Start_Date = Start_Date_Str.format("yyyy-MM-dd"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - End_Date_Str = java.util.Date.parse("yyyy-MM-dd", Glb_EndDate): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:internal.GlobalVariable.Glb_StartDate, End_Date:internal.GlobalVariable.Glb_EndDate, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-10-12 09:54:31 - [MESSAGE][PASSED] - Send request successfully

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Dealer_Code == "765A")): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.after(End_Date_Str)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else If (Duration <= 0): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_ServiceBay_Type == "PERIODIC" || Glb_ServiceBay_Type == "EXPRESS" || Glb_ServiceBay_Type == "REPAIR" || Glb_ServiceBay_Type == "DIAGNOSTIC")): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else If (Glb_Location_Code == "2" || Glb_Location_Code == "3" || Glb_Location_Code == "5"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else If (!(Glb_Location_Code == "1" || Glb_Location_Code == "4" || Glb_Location_Code == "360")): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else If (Start_Date_Str.before(current)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else If (Duration >= 10): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - VerifyResponse(res_GetServiceOperation, 200, ""): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-10-12 09:54:31 - [MESSAGE][PASSED] - Verify response status code successfully

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(response.getResponseText()): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(ExpectedMessage == "")): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - duration_days = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - For ([i = 0, i < duration_days + 1, (i++)]): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(Start_Date_Str.format("E") == "Sat" || Start_Date_Str.format("E") == "Sun")): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-10-12 09:54:31 - [MESSAGE][PASSED] - Verify element property value successfully

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - IsCurrentDate = "false": null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (Start_Date_Str.equals(current)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - While (!(realtime_ws.after(time_close_ws))): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (IsCurrentDate == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (realtime_ws.after(today)): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(Reserve_Timeslot == "") && Service_Date == Start_Date_Str): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - println(times): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - res_Text = new groovy.json.JsonSlurper().parseText(res_GetServiceOperation.getResponseText()): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - timeslotJSON = 0: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - println(Times): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Times.each({ -> ... }): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - assert timeslotJSON == count: null

2018-10-12 09:54:31 - [MESSAGE][FAILED] - Unable to call Test Case with id 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' (Root cause: Call Test Case 'Test Cases/TOYOTA/Library_TestCase/Toyota_GetDropOffTimes_JSON - V3' failed)

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Start tear down : HandleFailing: Method 'HandleFailing' complete successfully

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (var_Status_OpCode == "true" && var_Status_GetOffTime == "true" && var_Status_PickupTime == "true" && var_Status_ReservedTimeslot == "true" && var_Status_GetTransport == "true" && var_Status_MakeBooking == "true" && var_Status_SearchBooking == "true" && var_Status_GetBookingDetail == "true" && var_Status_ChangeBooking == "true" && var_Status_CancelBooking == "true"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (!(Glb_Status_GetOperationCode == "passed")): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - Else: null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - println("Test Case GetOperationCode: PASSED"): null

2018-10-12 09:54:31 - [TEST_STEP][PASSED] - Statement - If (Glb_Status_GetDropOffTime == "passed"): null

2018-10-12 09:54:31 - [MESSAGE][PASSED] - Method 'HandleFailing' complete successfully]]></system-out>
         <system-err><![CDATA[2018-10-12 09:53:43 - [TEST_CASE][FAILED] - Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON == count
       |            |  |
       2            |  3
                    false

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537952975430.run(Script1537952975430.groovy:193)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:71)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-err>
      </testcase>
      <system-out><![CDATA[2018-10-12 09:47:11 - [TEST_SUITE][FAILED] - Sprint_All - DevTransferDataSet: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON.size == count
       |            |    |  |
       |            3    |  2
       |                 false
       [15:00, 16:00, 17:00]

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537953621302.run(Script1537953621302.groovy:222)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:81)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-out>
      <system-err><![CDATA[2018-10-12 09:47:11 - [TEST_SUITE][FAILED] - Sprint_All - DevTransferDataSet: Test Cases/TOYOTA/Main_Toyota_TestCase - AllSprints - Dev FAILED because (of) (Stack trace: Assertion failed: 

assert timeslotJSON.size == count
       |            |    |  |
       |            3    |  2
       |                 false
       [15:00, 16:00, 17:00]

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:402)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:650)
	at Script1537953621302.run(Script1537953621302.groovy:222)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:99)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:60)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:54)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:45)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at Script1538995852818.run(Script1538995852818.groovy:81)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1539312430582.run(TempTestSuite1539312430582.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-err>
   </testsuite>
</testsuites>
