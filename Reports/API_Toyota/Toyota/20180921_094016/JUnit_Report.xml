<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Toyota" time="9" tests="5" failures="0" errors="0">
   <testsuite name="Toyota" tests="5" failures="0" errors="0" time="9" timestamp="2018-09-21 09:40:17" hostname="vinh.le - TITAN-V-2001.titandms.local" id="Test Suites/API_Toyota/Toyota">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\vinh.le\\git\\TitanAPIKatalon_new\\Reports\\API_Toyota\\Toyota\\20180921_094016"/>
         <property name="logFiles" value="C:\\Users\\vinh.le\\git\\TitanAPIKatalon_new\\Reports\\API_Toyota\\Toyota\\20180921_094016\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="vinh.le - TITAN-V-2001.titandms.local"/>
         <property name="hostAddress" value="192.168.3.19"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="5.7.1.1"/>
      </properties>
      <testcase name="Test Cases/Setup_Method_And_Variables" classname="Test Cases/Setup_Method_And_Variables" status="PASSED">
         <system-out><![CDATA[2018-09-21 09:40:17 - [TEST_CASE][PASSED] - Test Cases/Setup_Method_And_Variables: Test Cases/Setup_Method_And_Variables

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - Glb_Interval = Setup_Interval: null

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - Glb_WorkshopStart = Setup_WorkshopStart: null

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - Glb_WorkshopEnd = Setup_WorkshopEnd: null

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - Glb_Dealer_Code = Setup_Dealer_Code: null

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - Glb_Location_Code = Setup_Location_Code: null

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - today = new java.util.Date(): null

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - current = today.format("YYYY-MM-dd"): null

2018-09-21 09:40:17 - [TEST_STEP][PASSED] - Statement - Glb_ServiceDate = current: null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Toyota_GetServiceOperation_JSON" classname="Test Cases/Toyota_GetServiceOperation_JSON" status="PASSED">
         <system-out><![CDATA[2018-09-21 09:40:17 - [TEST_CASE][PASSED] - Test Cases/Toyota_GetServiceOperation_JSON: Test Cases/Toyota_GetServiceOperation_JSON

2018-09-21 09:40:18 - [TEST_STEP][PASSED] - Statement - GetServiceOperation = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetServiceOperations_JSON, [Dealer_Code:internal.GlobalVariable.Glb_Dealer_Code, Location_Code:internal.GlobalVariable.Glb_Location_Code, VIN:internal.GlobalVariable.Glb_VIN, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetServiceOperations_JSON'

2018-09-21 09:40:18 - [TEST_STEP][PASSED] - Statement - GetServiceOperation.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-09-21 09:40:18 - [TEST_STEP][PASSED] - Statement - res_GetServiceOperation = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(GetServiceOperation): Send request successfully

2018-09-21 09:40:24 - [MESSAGE][PASSED] - Send request successfully

2018-09-21 09:40:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-09-21 09:40:24 - [MESSAGE][PASSED] - Verify response status code successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Toyota_GetDropOffTimes_JSON" classname="Test Cases/Toyota_GetDropOffTimes_JSON" status="PASSED">
         <system-out><![CDATA[2018-09-21 09:40:24 - [TEST_CASE][PASSED] - Test Cases/Toyota_GetDropOffTimes_JSON: Test Cases/Toyota_GetDropOffTimes_JSON

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - Start_Date = Glb_ServiceDate: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - End_Date = Glb_ServiceDate: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - mainrequest = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:Start_Date, End_Date:End_Date, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, Duration_Time:internal.GlobalVariable.Glb_Duration_Time, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - mainrequest.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - response = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(mainrequest): Send request successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Send request successfully

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify response status code successfully

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - While (realtime_ws.before(time_close_ws)): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:25 - [MESSAGE][PASSED] - Verify element property value successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Toyota_GetDropOffTimes_JSON" classname="Test Cases/Toyota_GetDropOffTimes_JSON" status="PASSED">
         <system-out><![CDATA[2018-09-21 09:40:25 - [TEST_CASE][PASSED] - Test Cases/Toyota_GetDropOffTimes_JSON: Test Cases/Toyota_GetDropOffTimes_JSON

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - Start_Date = Glb_ServiceDate: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - End_Date = Glb_ServiceDate: null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - mainrequest = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:Start_Date, End_Date:End_Date, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, Duration_Time:internal.GlobalVariable.Glb_Duration_Time, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - mainrequest.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-09-21 09:40:25 - [TEST_STEP][PASSED] - Statement - response = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(mainrequest): Send request successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Send request successfully

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify response status code successfully

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - While (realtime_ws.before(time_close_ws)): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Toyota_GetDropOffTimes_JSON" classname="Test Cases/Toyota_GetDropOffTimes_JSON" status="PASSED">
         <system-out><![CDATA[2018-09-21 09:40:26 - [TEST_CASE][PASSED] - Test Cases/Toyota_GetDropOffTimes_JSON: Test Cases/Toyota_GetDropOffTimes_JSON

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - Start_Date = Glb_ServiceDate: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - End_Date = Glb_ServiceDate: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - mainrequest = com.kms.katalon.core.testobject.ObjectRepository.findTestObject(Toyota/GetDropOffTimes_JSON, [Start_Date:Start_Date, End_Date:End_Date, ServiceBay_Type:internal.GlobalVariable.Glb_ServiceBay_Type, Duration_Time:internal.GlobalVariable.Glb_Duration_Time, ... ]): Finding Test Object with id 'Object Repository/Toyota/GetDropOffTimes_JSON'

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - mainrequest.getHttpHeaderProperties().add(new com.kms.katalon.core.testobject.TestObjectProperty(Authorization, com.kms.katalon.core.testobject.ConditionType.EQUALS, (Basic  + internal.GlobalVariable.Glb_Authorization_Token))): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - response = com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords.sendRequest(mainrequest): Send request successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Send request successfully

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode: Verify response status code successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify response status code successfully

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - verifyElementPropertyValue: Verify element property value successfully

2018-09-21 09:40:26 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - realtime_ws = new java.util.Date(): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - Start = Glb_WorkshopStart: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - End = Glb_WorkshopEnd: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - Interval = Glb_Interval: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - Duration = Glb_Duration_Time: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - realtime_ws.set(["hourOfDay":Start, "minute":0]): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - println(realtime_ws.format("HH:mm")): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - time_close_ws = new java.util.Date(): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - time_close_ws.set(["hourOfDay":End - Duration, "minute":0]): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times = []: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = 0: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - While (realtime_ws.before(time_close_ws)): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:26 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - times[count] = realtime_ws.format("HH:mm"): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - count = count + 1: null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - use(groovy.time.TimeCategory, { -> ... }): null

2018-09-21 09:40:27 - [TEST_STEP][PASSED] - Statement - For ([j = 0, j < count, (j++)]): Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully

2018-09-21 09:40:27 - [MESSAGE][PASSED] - Verify element property value successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2018-09-21 09:40:17 - [TEST_SUITE][PASSED] - Toyota: Test Cases/Toyota_GetDropOffTimes_JSON]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
